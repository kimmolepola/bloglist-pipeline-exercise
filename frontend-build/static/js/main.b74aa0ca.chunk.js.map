{"version":3,"sources":["services/blogs.js","services/login.js","components/Notification.js","components/Togglable.js","hooks/index.js","components/NewBlogForm.js","components/Blog.js","App.js","index.js"],"names":["config","remove","id","a","axios","delete","response","put","content","data","getAll","get","then","setConfig","t","headers","Authorization","create","post","login","credentials","Notification","notification","className","message","Togglable","React","forwardRef","ref","children","buttonLabel","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","type","onClick","displayName","useField","name","value","setValue","onChange","event","target","reset","NewBlogForm","user","blogs","setBlogs","notify","urlreset","url","authorreset","author","titlereset","title","noteFormRef","createRef","handleCreateNewBlog","preventDefault","current","blogService","rsp","concat","onSubmit","Blog","blog","handleBlogUpdate","handleBlogDelete","expanded","setExpanded","toggleExpanded","showWhenSameUser","username","backgroundColor","hideWhenExpanded","paddingTop","paddingLeft","border","borderWidth","marginBottom","showWhenExpanded","tabIndex","role","onKeyDown","href","likes","handleLike","App","setNotification","setUser","usernamereset","passwordreset","password","useEffect","initialBlogs","loggedUserJSON","window","localStorage","getItem","usr","JSON","parse","token","setTimeout","confirm","status","newBlogs","reduce","result","x","push","map","blg","fullContent","handleLogout","removeItem","handleLogin","loginService","setItem","stringify","sort","b","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b74aa0ca.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet config;\r\n\r\nconst setConfig = (t) => {\r\n  config = {\r\n    headers: { Authorization: `bearer ${t}` },\r\n  };\r\n};\r\n\r\nconst remove = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n  return response;\r\n};\r\n\r\nconst put = async (content) => {\r\n  const response = await axios.put(`${baseUrl}/${content.id}`, content, config);\r\n  return response.data;\r\n};\r\n\r\nconst create = async (content) => {\r\n  const response = await axios.post(baseUrl, content, config);\r\n  return response.data;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll, setConfig, create, put, remove,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React from 'react';\r\n\r\n/* eslint-disable react/prop-types */\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={notification.className}>\r\n      {notification.message}\r\n    </div>\r\n  );\r\n};\r\n/* eslint-enable react/prop-types */\r\n\r\nexport default Notification;\r\n","import React, { useState, useImperativeHandle } from 'react';\r\n\r\n/* eslint-disable react/prop-types */\r\nconst Togglable = React.forwardRef(({ children, buttonLabel }, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => setVisible(!visible);\r\n\r\n  useImperativeHandle(ref, () => ({ toggleVisibility }));\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button type=\"button\" onClick={toggleVisibility}>{buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        <button type=\"button\" onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n/* eslint-enable react/prop-types */\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nexport default Togglable;\r\n","import { useState } from 'react';\r\n\r\n/* eslint-disable import/prefer-default-export */\r\nexport const useField = (type, name) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue('');\r\n  };\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset,\r\n    name,\r\n  };\r\n\r\n/* eslint-enable import/prefer-default-export */\r\n};\r\n","import React from 'react';\r\nimport blogService from '../services/blogs';\r\nimport Togglable from './Togglable';\r\nimport { useField } from '../hooks';\r\n\r\n/* eslint-disable react/prop-types */\r\nconst NewBlogForm = ({\r\n  user, blogs, setBlogs, notify,\r\n}) => {\r\n  const { reset: urlreset, ...url } = useField('text', 'Url');\r\n  const { reset: authorreset, ...author } = useField('text', 'Author');\r\n  const { reset: titlereset, ...title } = useField('text', 'Title');\r\n\r\n  const noteFormRef = React.createRef();\r\n\r\n  const handleCreateNewBlog = async (event) => {\r\n    event.preventDefault();\r\n    noteFormRef.current.toggleVisibility();\r\n    try {\r\n      const response = await blogService.create({\r\n        title: title.value, author: author.value, url: url.value,\r\n      });\r\n      const rsp = { ...response };\r\n      rsp.user = { id: response.user, ...user };\r\n      setBlogs(blogs.concat(rsp));\r\n      urlreset();\r\n      authorreset();\r\n      titlereset();\r\n      notify(`a new blog ${title.value} by ${author.value} added`, 'success');\r\n    } catch (exception) {\r\n      notify('Failed', 'error');\r\n    }\r\n  };\r\n  /* eslint-disable react/jsx-props-no-spreading */\r\n  return (\r\n    <div>\r\n      <Togglable buttonLabel=\"new blog\" ref={noteFormRef}>\r\n        <h2>create new</h2>\r\n        <form onSubmit={handleCreateNewBlog}>\r\n          <div>\r\n            title:\r\n            <input {...title} />\r\n            <button type=\"button\" onClick={() => titlereset()}>reset</button>\r\n          </div>\r\n          <div>\r\n            author:\r\n            <input {...author} />\r\n            <button type=\"button\" onClick={() => authorreset()}>reset</button>\r\n          </div>\r\n          <div>\r\n            url:\r\n            <input {...url} />\r\n            <button type=\"button\" onClick={() => urlreset()}>reset</button>\r\n          </div>\r\n          <button type=\"submit\">create</button>\r\n        </form>\r\n      </Togglable>\r\n    </div>\r\n  );\r\n};\r\n/* eslint-enable react/jsx-props-no-spreading, react/prop-types */\r\n\r\nexport default NewBlogForm;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Blog = ({\r\n  blog, handleBlogUpdate, handleBlogDelete, user,\r\n}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleLike = () => {\r\n    const content = {\r\n      id: blog.id,\r\n      user: blog.user.id,\r\n      title: blog.title,\r\n      author: blog.author,\r\n      likes: blog.likes + 1,\r\n    };\r\n    handleBlogUpdate(content);\r\n  };\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const showWhenSameUser = {\r\n    display: user.username === blog.user.username ? '' : 'none',\r\n    backgroundColor: 'lightblue',\r\n  };\r\n\r\n  const hideWhenExpanded = {\r\n    display: expanded ? 'none' : '',\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5,\r\n  };\r\n\r\n  const showWhenExpanded = {\r\n    display: expanded ? '' : 'none',\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div tabIndex=\"0\" role=\"button\" style={hideWhenExpanded} onKeyDown={() => toggleExpanded()} onClick={() => toggleExpanded()}>\r\n        {blog.title} {blog.author}\r\n      </div>\r\n      <div tabIndex=\"0\" role=\"button\" style={showWhenExpanded} onKeyDown={() => toggleExpanded()} onClick={() => toggleExpanded()}>\r\n        {blog.title} {blog.author}<br />\r\n        <a href={blog.url}>{blog.url}</a><br />\r\n        {blog.likes}<button type=\"button\" onClick={() => handleLike()}>like</button> <br />\r\n        added by {blog.user.name}\r\n        <button style={showWhenSameUser} type=\"button\" onClick={() => handleBlogDelete(blog.id, blog.title, blog.author)}>remove</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n    user: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      username: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  handleBlogUpdate: PropTypes.func.isRequired,\r\n  handleBlogDelete: PropTypes.func.isRequired,\r\n  user: PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Blog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport blogService from './services/blogs';\r\nimport loginService from './services/login';\r\nimport Notification from './components/Notification';\r\nimport NewBlogForm from './components/NewBlogForm';\r\nimport Blog from './components/Blog';\r\nimport './App.css';\r\nimport { useField } from './hooks';\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const { reset: usernamereset, ...username } = useField('text', 'Username');\r\n  const { reset: passwordreset, ...password } = useField('password', 'Password');\r\n\r\n  useEffect(() => {\r\n    blogService\r\n      .getAll().then((initialBlogs) => {\r\n        setBlogs(initialBlogs);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\r\n    if (loggedUserJSON) {\r\n      const usr = JSON.parse(loggedUserJSON);\r\n      setUser(usr);\r\n      blogService.setConfig(usr.token);\r\n    }\r\n  }, []);\r\n\r\n  const notify = (message, className) => {\r\n    setNotification({ message, className });\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleBlogDelete = async (id, title, author) => {\r\n    if (window.confirm(`remove blog ${title} by ${author}`)) { // eslint-disable-line no-alert\r\n      const response = await blogService.remove(id);\r\n      if (response.status === 204) {\r\n        const newBlogs = blogs.reduce((result, x) => {\r\n          if (x.id !== id) {\r\n            result.push(x);\r\n          }\r\n          return result;\r\n        }, []);\r\n        setBlogs(newBlogs);\r\n      } else {\r\n        notify('failed', 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBlogUpdate = async (content) => {\r\n    const response = await blogService.put(content);\r\n    const newBlogs = blogs.map((blg) => {\r\n      if (blg.id === response.id) {\r\n        const fullContent = { ...response };\r\n        fullContent.user = blg.user;\r\n        return fullContent;\r\n      }\r\n      return blg;\r\n    });\r\n    setBlogs(newBlogs);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedBlogappUser');\r\n    setUser(null);\r\n  };\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const usr = await loginService.login({\r\n        username: username.value, password: password.value,\r\n      });\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(usr),\r\n      );\r\n      blogService.setConfig(usr.token);\r\n      setUser(usr);\r\n      usernamereset();\r\n      passwordreset();\r\n    } catch (exception) {\r\n      notify('Wrong username or password', 'error');\r\n    }\r\n  };\r\n\r\n  const blogForm = () => (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification notification={notification} />\r\n      <p>{user.name} logged in\r\n        <button onClick={handleLogout} type=\"button\">logout</button>\r\n      </p>\r\n      <NewBlogForm user={user} blogs={blogs} setBlogs={setBlogs} notify={notify} />\r\n      {blogs.sort((a, b) => a.likes - b.likes).map((blog) => (\r\n        <Blog\r\n          key={blog.id}\r\n          blog={blog}\r\n          handleBlogUpdate={handleBlogUpdate}\r\n          handleBlogDelete={handleBlogDelete}\r\n          user={user}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  /* eslint-disable react/jsx-props-no-spreading */\r\n  const loginForm = () => (\r\n    <div>\r\n      <h2>Log in to application</h2>\r\n      <Notification notification={notification} />\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n            username\r\n          <input {...username} />\r\n        </div>\r\n        <div>\r\n            password\r\n          <input {...password} />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n  /* eslint-enable react/jsx-props-no-spreading */\r\n\r\n  return (\r\n    <div>\r\n      {user === null && loginForm()}\r\n      {user !== null && blogForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}